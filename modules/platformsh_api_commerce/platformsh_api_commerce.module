<?php
/**
 * @file
 * Platform.sh API Commerce integration module.
 */

/**
 * Implements hook_menu().
 */
function platformsh_api_commerce_menu() {
  $items = array();
  $items['platformsh/activation-callback/%commerce_license'] = array(
    'title' => 'Subscription activation callback',
    'page callback' => 'platformsh_api_commerce_activation_callback',
    'page arguments' => array(2),
    'access callback' => 'platformsh_api_commerce_activation_callback_access',
    'access arguments' => array(2),
    'type' => MENU_CALLBACK,
    'file' => 'includes/platformsh_api_commerce.activation_callback.inc',
  );

  return $items;
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function platformsh_api_commerce_ctools_plugin_directory($module, $plugin) {
  if ($module == 'commerce_license') {
    return 'plugins/' . $plugin;
  }
}

/**
 * Implements hook_field_access().
 */
function platformsh_api_commerce_field_access($op, $field, $entity_type, $entity, $account) {
  // Prevent access to edit the subscription reference field in the UI.
  if ($entity_type == 'commerce_license' && $field['field_name'] == 'platformsh_license_subscription') {
    return FALSE;
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function platformsh_api_commerce_form_platformsh_api_config_form_alter(&$form, &$form_state) {
  $form['commerce'] = array(
    '#type' => 'fieldset',
    '#title' => t('Commerce integration'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );
  $form['commerce']['platformsh_api_commerce_wait'] = array(
    '#type' => 'checkbox',
    '#title' => t('Wait for activation'),
    '#description' => t('Wait for the subscription to become active during the initial synchronization.'),
    '#default_value' => variable_get('platformsh_api_commerce_wait', TRUE),
  );
  $form['commerce']['platformsh_api_commerce_use_callback'] = array(
    '#type' => 'checkbox',
    '#title' => t('Use activation callback'),
    '#default_value' => variable_get('platformsh_api_commerce_use_callback', TRUE),
    '#description' => t('Request a notification from Platform.sh after activation.'),
  );
}
